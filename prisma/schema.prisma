//npx prisma migrate dev --name init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model usuario {
  id                       Int                @id @default(autoincrement())
  nome                     String
  email                    String             @unique
  senha                    String
  criadoEm                 DateTime           @default(now())
  editadoEm                DateTime           @default(now())
  deletadoEm               DateTime?
  usuarioPermissao         usuarioPermissao[]
  residencia               residencia[]
  morador                  morador[]
  tipoProduto              tipoProduto[]
  produto                  produto[]
  listaProdutosUsuario     listaProdutos[]    @relation("listaProdutos_usuario")
  listaProdutosResponsavel listaProdutos[]    @relation("listaProdutos_responsavel")
  rotinaResponsavel        rotina[]           @relation("rotina_responsavel")
  rotinaUsuario            rotina[]           @relation("rotina_usuario")
}

model permissao {
  id               Int                @id @default(autoincrement())
  nome             String             @unique
  descricao        String
  usuarioPermissao usuarioPermissao[]
}

model usuarioPermissao {
  id          Int       @id @default(autoincrement())
  usuarioId   Int
  permissaoId Int
  usuario     usuario   @relation(fields: [usuarioId], references: [id])
  permissao   permissao @relation(fields: [permissaoId], references: [id])
}

model residencia {
  id            Int             @id @default(autoincrement())
  nome          String
  ehFavorito    Boolean         @default(false)
  criadoEm      DateTime        @default(now())
  editadoEm     DateTime        @default(now())
  deletadoEm    DateTime?
  usuarioId     Int
  usuario       usuario         @relation(fields: [usuarioId], references: [id])
  morador       morador[]
  listaProdutos listaProdutos[]
  rotina        rotina[]
}

model morador {
  id             Int        @id @default(autoincrement())
  nome           String
  dataNascimento DateTime
  criadoEm       DateTime   @default(now())
  editadoEm      DateTime   @updatedAt
  deletadoEm     DateTime?
  residenciaId   Int
  usuarioId      Int?
  residencia     residencia @relation(fields: [residenciaId], references: [id])
  usuario        usuario?   @relation(fields: [usuarioId], references: [id])
}

model listaProdutos {
  id            Int         @id @default(autoincrement())
  nome          String
  observacao    String?
  residenciaId  Int?
  responsavelId Int?
  usuarioId     Int
  residencia    residencia? @relation(fields: [residenciaId], references: [id])
  responsavel   usuario?    @relation("listaProdutos_responsavel", fields: [responsavelId], references: [id])
  produto       produto[]
  usuario       usuario     @relation("listaProdutos_usuario", fields: [usuarioId], references: [id])
}

model tipoProduto {
  id        Int       @id @default(autoincrement())
  descricao String
  usuarioId Int
  usuario   usuario   @relation(fields: [usuarioId], references: [id])
  produto   produto[]
}

model produto {
  id              Int           @id @default(autoincrement())
  nome            String
  quantidade      Int
  unidade         String
  observacao      String?
  tipoProdutoId   Int?
  listaProdutosId Int
  usuarioId       Int
  tipoProduto     tipoProduto?  @relation(fields: [tipoProdutoId], references: [id], onDelete: SetNull)
  listaProdutos   listaProdutos @relation(fields: [listaProdutosId], references: [id])
  usuario         usuario       @relation(fields: [usuarioId], references: [id])
}

model rotina {
  id            Int         @id @default(autoincrement())
  nome          String
  dataInicio    String
  dataTermino   String?
  horaInicio    String?
  horaTermino   String?
  repeticao     String?
  intervalo     Int?
  periodo       String[]
  observacao    String?
  criadoEm      DateTime    @default(now())
  editadoEm     DateTime    @updatedAt
  deletadoEm    DateTime?
  responsavelId Int?
  residenciaId  Int?
  usuarioId     Int
  responsavel   usuario?    @relation("rotina_responsavel", fields: [responsavelId], references: [id])
  residencia    residencia? @relation(fields: [residenciaId], references: [id])
  usuario       usuario     @relation("rotina_usuario", fields: [usuarioId], references: [id])
}
